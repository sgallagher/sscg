name: Continuous Integration (aarch64)

on: [ push, pull_request ]

jobs:
  ubuntu:
    name: Ubuntu aarch64
    runs-on: ${{ matrix.os }}-arm
    continue-on-error: true
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-22.04
          - ubuntu-24.04
        compiler:
          - gcc

    steps:
    - name: Checkout code
      uses: actions/checkout@v5

    - name: Install build dependencies
      run: |
        sudo apt update
        sudo apt install -y build-essential meson pkgconf openssl libssl-dev libpath-utils-dev libtalloc-dev help2man libpopt-dev ${{ matrix.compiler }}
        sudo apt install -y --no-install-recommends debhelper devscripts lintian
        # 18.04's debhelper is too old, we want to use compat level 12
        if grep -q 18.04 /etc/os-release; then
            sudo apt install -y -t bionic-backports debhelper
        fi

    - name: Configure build directory
      run: |
        CC=${{ matrix.compiler}} meson setup ${{ matrix.os }}

    - name: Build SSCG
      run: |
        ninja -C ${{ matrix.os }}

    - name: Run in-tree tests
      run: |
        meson test -t 5 --print-errorlogs -C ${{ matrix.os }}

    - name: Build Debian source package
      run: |
        set -ex
        mkdir deb
        # keep version number as 0 for upstream, to match debian/changelog
        git archive -o deb/sscg_0.orig.tar.gz --prefix sscg/ HEAD
        cd deb
        # unpack tar again to make sure the dist is complete and clean
        tar xf sscg_*.tar.gz
        cd sscg
        cp -r packaging/debian .

        # build source and binary package, with lintian
        debuild -e CC=${{ matrix.compiler}} -us -uc

    - name: Install built Debian binary package
      run: |
        sudo dpkg -i deb/sscg_*.deb

    - name: Smoke test installed package
      run: |
        cd /tmp/
        sscg
        openssl x509 -in service.pem -text
        openssl x509 -in ca.crt -text
